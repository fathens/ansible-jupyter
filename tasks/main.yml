- name: get jupyter data dir
  command: bash -l -c 'jupyter --data-dir'
  register: jupyter_data_dir

- name: create jupyter's directory
  file:
    path: "{{ jupyter_notebook_dir }}"
    state: directory

- name: initialize os packages
  include_tasks: _os_specific.yml
  vars:
    base_task_name: _initialize

- name: install kernels
  include_tasks: "{{ kernel }}.yml"
  loop: "{{ jupyter_kernels }}"
  loop_control:
    loop_var: kernel
    label: "{{ kernel }}"

- name: clone jupyter-vim-binding
  git:
    repo: "{{ jupyter_vim_binding_repo }}"
    dest: "{{ jupyter_data_dir.stdout }}/nbextensions/vim_binding"

- name: enable jupyter extentions
  command: bash -l -c "jupyter nbextension enable {{ item }}"
  loop: "{{ jupyter_extentions }}"

- name: clone storage of jupyter notebooks
  when: jupyter_notebook_storage_repo is defined
  git:
    repo: "{{ jupyter_notebook_storage_repo }}"
    dest: "{{ jupyter_notebook_storage_dir }}"
    update: no
    force: no

- name: setup git config to clean ipynb
  when: jupyter_notebook_storage_repo is defined
  blockinfile:
    path: "{{ jupyter_notebook_storage_dir }}/.git/{{ item.file }}"
    create: yes
    block: |
      {{ item.content }}
  loop: "{{ jupyter_notebook_storage_gitconfig }}"

- name: create jupyter storage
  when: jupyter_notebook_storage_repo is not defined
  file:
    path: "{{ jupyter_notebook_storage_dir }}"
    state: directory

- name: put jupyter's run.sh
  loop:
    - f: jupyter-run.sh
      d: "{{ jupyter_notebook_dir }}/run.sh"
      m: '0744'
    - f: jupyter-config.py
      d: "{{ jupyter_notebook_dir }}/config.py"
  template:
    src: "{{ item.f }}.j2"
    dest: "{{ item.d }}"
    mode: "{{ item.m|default('0644') }}"

- name: put jupyter.service
  become: yes
  loop:
    - f: jupyter.service
      d: /etc/systemd/system
  template:
    src: "{{ item.f }}.j2"
    dest: "{{ item.d }}/{{ item.f }}"
    mode: "{{ item.m|default('0644') }}"

- name: start service of jupyter
  become: yes
  shell: |
    systemctl enable jupyter.service
    systemctl daemon-reload
    systemctl restart jupyter.service

- name: tidyup os packages
  include_tasks: _os_specific.yml
  vars:
    base_task_name: _tidyup
